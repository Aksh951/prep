{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Part/Part.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","style","display","justifyContent","onClick","className","Logo","options","max","reverse","height","width","alt","src","brain","Rank","ImageLinkForm","onInputChange","onSubmit","type","onChange","SignIn","id","htnlfor","name","htmlfor","value","href","Register","Part","params","FaceRecognition","imageURL","box","heigh","top","topRow","right","rightCol","left","leftCol","bottom","bottomRow","app","Clarifai","App","apiKey","route","setState","calcFaceData","data","clarifaiface","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","hgt","left_col","top_row","right_col","bottom_row","displaybox","console","log","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"oPAUeA,EARE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAClB,OACC,yBAAKC,MAAO,CAACC,QAAQ,OAAQC,eAAe,aAC5C,uBAAGC,QAAS,kBAAIJ,EAAc,aAAaK,UAAU,6CAArD,e,kCCUaC,G,MAVJ,WACV,OACC,yBAAKD,UAAU,WACd,kBAAC,IAAD,CAAMA,UAAU,oBAAoBE,QAAS,CAAEC,IAAM,GAAIC,SAAQ,GAAOR,MAAO,CAAES,OAAQ,IAAKC,MAAO,MACnG,yBAAKN,UAAU,kBAAf,IAAiC,yBAAKO,IAAI,OAAOC,IAAKC,MAAtD,SCQUC,EAbJ,WACV,OACC,6BACC,yBAAKV,UAAU,YACd,6BAED,yBAAKA,UAAU,YACd,QCOWW,G,MAdK,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,cAAcC,EAAY,EAAZA,SACnC,OACC,6BACC,uBAAGb,UAAU,YAAY,qBACzB,yBAAKA,UAAU,yBACd,2BAAOA,UAAU,qBAAqBc,KAAK,MAAMC,SAAUH,IAC3D,4BACCZ,UAAU,sDACVD,QAASc,GAFV,cCsBWG,G,MA7BF,SAAC,GAAmB,IAAlBrB,EAAiB,EAAjBA,cACd,OACA,0BAAMK,UAAU,gBACd,0BAAMA,UAAU,kBACb,8BAAUiB,GAAG,UAAUjB,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,WACA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,oBAAoBkB,QAAQ,iBAA7C,SACA,2BAAOlB,UAAU,qEAAqEc,KAAK,QAAQK,KAAK,gBAAiBF,GAAG,mBAE9H,yBAAKjB,UAAU,OACb,2BAAOA,UAAU,oBAAoBoB,QAAQ,YAA7C,YACA,2BAAOpB,UAAU,uEAAuEc,KAAK,WAAWK,KAAK,WAAYF,GAAG,cAE9H,2BAAOjB,UAAU,8BAA6B,2BAAOc,KAAK,aAA1D,iBAEF,yBAAKd,UAAU,IACb,2BACAD,QAAS,kBAAIJ,EAAc,SAC3BK,UAAU,uEAAuEc,KAAK,SAASO,MAAM,aAEvG,yBAAKrB,UAAU,eACb,uBAAGD,QAAS,kBAAIJ,EAAc,aAAa2B,KAAK,KAAKtB,UAAU,wBAA/D,iBCUOuB,EAhCA,SAAC,GAAmB,IAAlB5B,EAAiB,EAAjBA,cAChB,OACC,iCACD,0BAAMK,UAAU,gBACd,0BAAMA,UAAU,kBACb,8BAAUiB,GAAG,UAAUjB,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,kBACA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,oBAAoBkB,QAAQ,QAA7C,QACA,2BAAOlB,UAAU,qEAAqEc,KAAK,OAAOK,KAAK,OAAQF,GAAG,UAEpH,yBAAKjB,UAAU,OACb,2BAAOA,UAAU,oBAAoBoB,QAAQ,iBAA7C,SACA,2BAAOpB,UAAU,qEAAqEc,KAAK,QAAQK,KAAK,gBAAiBF,GAAG,mBAE9H,yBAAKjB,UAAU,OACb,2BAAOA,UAAU,oBAAoBoB,QAAQ,YAA7C,YACA,2BAAOpB,UAAU,uEAAuEc,KAAK,WAAWK,KAAK,WAAYF,GAAG,eAGhI,yBAAKjB,UAAU,IACb,2BACAD,QAAS,kBAAIJ,EAAc,aAC3BK,UAAU,uEAAuEc,KAAK,SAASO,MAAM,kB,iBC0G9FG,G,OAhIJ,WACN,OACS,kBAAC,IAAD,CAAWxB,UAAU,OACrByB,OAAQ,CAWpB,UAAa,CACX,OAAU,CACR,MAAS,IACT,QAAW,CACT,QAAU,EACV,WAAc,MAGlB,MAAS,CACP,MAAS,WAEX,MAAS,CACP,KAAQ,OACR,OAAU,CACR,MAAS,EACT,MAAS,WAEX,QAAW,CACT,SAAY,GAEd,MAAS,CACP,IAAO,iBACP,MAAS,IACT,OAAU,MAGd,QAAW,CACT,MAAS,GACT,QAAU,EACV,KAAQ,CACN,QAAU,EACV,MAAS,EACT,YAAe,GACf,MAAQ,IAGZ,KAAQ,CACN,MAAS,EACT,QAAU,EACV,KAAQ,CACN,QAAU,EACV,MAAS,GACT,SAAY,GACZ,MAAQ,IAGZ,YAAe,CACb,QAAU,EACV,SAAY,IACZ,MAAS,UACT,QAAW,GACX,MAAS,GAEX,KAAQ,CACN,QAAU,EACV,MAAS,EACT,UAAa,OACb,QAAU,EACV,UAAY,EACZ,SAAY,MACZ,QAAU,EACV,QAAW,CACT,QAAU,EACV,QAAW,IACX,QAAW,QAIjB,cAAiB,CACf,UAAa,SACb,OAAU,CACR,QAAW,CACT,QAAU,EACV,KAAQ,UAEV,QAAW,CACT,QAAU,EACV,KAAQ,QAEV,QAAU,GAEZ,MAAS,CACP,KAAQ,CACN,SAAY,IACZ,YAAe,CACb,QAAW,IAGf,OAAU,CACR,SAAY,IACZ,KAAQ,GACR,SAAY,EACZ,QAAW,EACX,MAAS,GAEX,QAAW,CACT,SAAY,IACZ,SAAY,IAEd,KAAQ,CACN,aAAgB,GAElB,OAAU,CACR,aAAgB,KAItB,eAAiB,O,0BC/GJC,G,OAXO,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,SAASC,EAAO,EAAPA,IAChC,OACC,yBAAK5B,UAAU,aACf,yBAAKA,UAAU,eACf,yBAAKiB,GAAG,aAAYV,IAAI,MAAMC,IAAKmB,EAAUrB,MAAM,QAAQuB,MAAM,SACjE,yBAAK7B,UAAU,cAAcJ,MAAO,CAACkC,IAAIF,EAAIG,OAASC,MAAMJ,EAAIK,SAAUC,KAAKN,EAAIO,QAASC,OAAOR,EAAIS,iBCKnGC,EAAM,IAAIC,IAASC,IAAI,CAC5BC,OAAQ,qCAyEMD,E,kDArEb,aAAc,IAAD,8BACX,gBASF7C,cAAc,SAAC+C,GACb,EAAKC,SAAS,CAACD,MAAMA,KAXV,EAcbE,aAAa,SAACC,GACV,IAAMC,EAAaD,EAAKE,QAAQ,GAAGF,KAAKG,QAAQ,GAAGC,YAAYC,aACzDC,EAAQC,SAASC,eAAe,cAChC/C,EAAMgD,OAAOH,EAAM7C,OACnBiD,EAAID,OAAOH,EAAM9C,QACvB,MAAM,CACJ8B,QAAQW,EAAaU,SAASlD,EAC9ByB,OAAOe,EAAaW,QAAQF,EAC5BtB,SAAS3B,EAAOwC,EAAaY,UAAUpD,EACvC+B,UAAUkB,EAAKT,EAAaa,WAAWJ,IAvBhC,EA4BbK,WAAW,SAAChC,GACViC,QAAQC,IAAIlC,GACV,EAAKe,SAAS,CAACf,IAAIA,KA9BV,EAiCbhB,cAAc,SAACmD,GACX,EAAKpB,SAAS,CAACqB,MAAMD,EAAME,OAAO5C,SAlCzB,EAqCbR,SAAS,WACP,EAAK8B,SAAS,CAAChB,SAAS,EAAKuC,MAAMF,QACnC1B,EAAI6B,OAAOC,QACT7B,IAAS8B,kBACT,EAAKH,MAAMF,OAAOM,MAAK,SAAAC,GAAQ,OAAE,EAAKX,WAAW,EAAKhB,aAAa2B,OAChEC,OAAM,SAAAC,GAAG,OAAGZ,QAAQC,IAAIW,OAxC7B,EAAKP,MAAM,CACTF,MAAM,GACNrC,SAAS,GACTC,IAAI,GACJc,MAAM,YANG,E,qDA8CX,OACE,yBAAK1C,UAAU,OACf,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYL,cAAe+E,KAAK/E,gBACZ,SAAnB+E,KAAKR,MAAMxB,MACR,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAe9B,cAAe8D,KAAK9D,cAAeC,SAAU6D,KAAK7D,WACjE,kBAAC,EAAD,CAAiBe,IAAK8C,KAAKR,MAAMtC,IAAKD,SAAU+C,KAAKR,MAAMvC,YAGpC,aAAnB+C,KAAKR,MAAMxB,MACZ,kBAAC,EAAD,CAAQ/C,cAAe+E,KAAK/E,gBAC5B,kBAAC,EAAD,CAAUA,cAAe+E,KAAK/E,qB,GA7D3BgF,aCLEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAASC,OAEL,kBAAC,EAAD,MAEF9B,SAASC,eAAe,SDuHpB,kBAAmB8B,WACrBA,UAAUC,cAAcC,MACrBf,MAAK,SAAAgB,GACJA,EAAaC,gBAEdf,OAAM,SAAAgB,GACL3B,QAAQ2B,MAAMA,EAAMC,a,mBEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.c545767b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation=({onRouteChange})=>{\r\n\treturn(\r\n\t\t<nav style={{display:'flex', justifyContent:'flex-end'}}>\r\n\t\t<p onClick={()=>onRouteChange('_signin_')} className='f4 link dim black i underline pa3 pointer'>Sign Out </p>\r\n\t\t</nav>\r\n\t\t);\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css'\r\n\r\nconst Logo=()=>{\r\n\treturn(\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55, reverse:true}} style={{ height: 150, width: 150 }} >\r\n\t\t\t \t<div className=\"Tilt-inner pa3\"> <img alt='Logo' src={brain}/> </div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\n\r\n\r\nconst Rank=()=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className='f4 green'>\r\n\t\t\t{'Your current rank is ....'}\r\n\t\t\t</div>\r\n\t\t\t<div className='f2 green'>\r\n\t\t\t{'#5'}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\n\r\nconst ImageLinkForm=({onInputChange,onSubmit})=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<p className='f4 white'>{'Will detect faces'}</p>\t\t\r\n\t\t\t<div className='form pa4 br3 shadow-5'>\r\n\t\t\t\t<input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n\t\t\t\t\tonClick={onSubmit}>Detect</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './SignIn.css'\r\n\r\nconst SignIn=({onRouteChange})=>{\t\r\n\treturn(\r\n\t<main className=\"pa4 black-80\">\r\n\t\t <form className=\"measure center\">\r\n\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t      <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t      <div className=\"mt3\">\r\n\t\t        <label className=\"db fw6 lh-copy f6\" htnlfor=\"email-address\">Email</label>\r\n\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t      </div>\r\n\t\t      <div className=\"mv3\">\r\n\t\t        <label className=\"db fw6 lh-copy f6\" htmlfor=\"password\">Password</label>\r\n\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t      </div>\r\n\t\t      <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\" /> Remember me</label>\r\n\t\t    </fieldset>\r\n\t\t    <div className=\"\">\r\n\t\t      <input \r\n\t\t      onClick={()=>onRouteChange('home')}\r\n\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n\t\t    </div>\r\n\t\t    <div className=\"lh-copy mt3\">\r\n\t\t      <a onClick={()=>onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db\">Register</a>\t\t      \r\n\t\t    </div>\r\n\t\t  </form> \r\n\t</main>\r\n\t\t);\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\n\r\nconst Register=({onRouteChange})=>{\t\r\n\treturn(\r\n\t\t<article>\r\n\t<main className=\"pa4 black-80\">\r\n\t\t <form className=\"measure center\">\r\n\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t      <legend className=\"f4 fw6 ph0 mh0\">Create Account</legend>\r\n\t\t      <div className=\"mt3\">\r\n\t\t        <label className=\"db fw6 lh-copy f6\" htnlfor=\"Name\">Name</label>\r\n\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n\t\t      </div>\r\n\t\t      <div className=\"mt3\">\r\n\t\t        <label className=\"db fw6 lh-copy f6\" htmlfor=\"email-address\">Email</label>\r\n\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t      </div>\r\n\t\t      <div className=\"mv3\">\r\n\t\t        <label className=\"db fw6 lh-copy f6\" htmlfor=\"password\">Password</label>\r\n\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t      </div>\t\t    \r\n\t\t    </fieldset>\r\n\t\t    <div className=\"\">\r\n\t\t      <input \r\n\t\t      onClick={()=>onRouteChange('Register')}\r\n\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\r\n\t\t    </div>\r\n\t\t   \r\n\t\t  </form> \r\n\t</main>\r\n\t</article>\r\n\t\t);\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport './Part.css'\r\n \r\nconst Part=()=>{\r\n     return (\r\n              <Particles className='part'\r\n              params={{\r\n                    // particles: {\r\n                    //     line_linked: {\r\n                    //         shadow: {\r\n                    //             enable: true,\r\n                    //             color: \"#3CA9D1\",\r\n                    //             blur: 5\r\n                    //         }\r\n                    //     }\r\n                    // }\r\n\r\n  \"particles\": {\r\n    \"number\": {\r\n      \"value\": 100,\r\n      \"density\": {\r\n        \"enable\": true,\r\n        \"value_area\": 850\r\n      }\r\n    },\r\n    \"color\": {\r\n      \"value\": \"#ffffff\"\r\n    },\r\n    \"shape\": {\r\n      \"type\": \"star\",\r\n      \"stroke\": {\r\n        \"width\": 0,\r\n        \"color\": \"#7a7272\"\r\n      },\r\n      \"polygon\": {\r\n        \"nb_sides\": 5\r\n      },\r\n      \"image\": {\r\n        \"src\": \"img/github.svg\",\r\n        \"width\": 100,\r\n        \"height\": 100\r\n      }\r\n    },\r\n    \"opacity\": {\r\n      \"value\": 0.5,\r\n      \"random\": false,\r\n      \"anim\": {\r\n        \"enable\": false,\r\n        \"speed\": 1,\r\n        \"opacity_min\": 0.1,\r\n        \"sync\": false\r\n      }\r\n    },\r\n    \"size\": {\r\n      \"value\": 1,\r\n      \"random\": false,\r\n      \"anim\": {\r\n        \"enable\": false,\r\n        \"speed\": 40,\r\n        \"size_min\": 0.1,\r\n        \"sync\": false\r\n      }\r\n    },\r\n    \"line_linked\": {\r\n      \"enable\": true,\r\n      \"distance\": 150,\r\n      \"color\": \"#ffffff\",\r\n      \"opacity\": 0.4,\r\n      \"width\": 1\r\n    },\r\n    \"move\": {\r\n      \"enable\": true,\r\n      \"speed\": 6,\r\n      \"direction\": \"none\",\r\n      \"random\": false,\r\n      \"straight\": false,\r\n      \"out_mode\": \"out\",\r\n      \"bounce\": false,\r\n      \"attract\": {\r\n        \"enable\": false,\r\n        \"rotateX\": 600,\r\n        \"rotateY\": 1200\r\n      }\r\n    }\r\n  },\r\n  \"interactivity\": {\r\n    \"detect_on\": \"canvas\",\r\n    \"events\": {\r\n      \"onhover\": {\r\n        \"enable\": true,\r\n        \"mode\": \"bubble\"\r\n      },\r\n      \"onclick\": {\r\n        \"enable\": true,\r\n        \"mode\": \"push\"\r\n      },\r\n      \"resize\": true\r\n    },\r\n    \"modes\": {\r\n      \"grab\": {\r\n        \"distance\": 400,\r\n        \"line_linked\": {\r\n          \"opacity\": 1\r\n        }\r\n      },\r\n      \"bubble\": {\r\n        \"distance\": 400,\r\n        \"size\": 40,\r\n        \"duration\": 2,\r\n        \"opacity\": 8,\r\n        \"speed\": 3\r\n      },\r\n      \"repulse\": {\r\n        \"distance\": 200,\r\n        \"duration\": 0.4\r\n      },\r\n      \"push\": {\r\n        \"particles_nb\": 4\r\n      },\r\n      \"remove\": {\r\n        \"particles_nb\": 2\r\n      }\r\n    }\r\n  },\r\n  \"retina_detect\": true\r\n\r\n                }}             \r\n            />\r\n        );\r\n}\r\n\r\nexport default Part;","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition=({imageURL,box})=>{\t\r\n\treturn(\r\n\t\t<div className='center ma'>\r\n\t\t<div className='absolute m2'>\r\n\t\t<img id='inputimage'alt='img' src={imageURL} width='500px' heigh='auto' />\t\r\n\t\t<div className='boundingbox' style={{top:box.topRow\t, right:box.rightCol, left:box.leftCol, bottom:box.bottomRow}}></div>\t\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React,{Component} from 'react';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Logo from './components/Logo/Logo';\r\nimport Rank from './components/Rank/Rank';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Register from './components/Register/Register';\r\nimport Part from './components/Part/Part';\r\nimport './App.css';\r\nimport Clarifai from 'clarifai';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\n\r\n\r\nconst app = new Clarifai.App({\r\n apiKey: '3105725e5315489aa93041a9416791ba'\r\n});\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      input:'',\r\n      imageURL:'',\r\n      box:{},\r\n      route:'_signin_',\r\n    }\r\n  }\r\n\r\n  onRouteChange=(route)=>{\r\n    this.setState({route:route})\r\n  }\r\n\r\n  calcFaceData=(data)=>{\r\n      const clarifaiface=data.outputs[0].data.regions[0].region_info.bounding_box;\r\n      const image = document.getElementById('inputimage');\r\n      const width=Number(image.width);\r\n      const hgt=Number(image.height);\r\n      return{\r\n        leftCol:clarifaiface.left_col*width,\r\n        topRow:clarifaiface.top_row*hgt,\r\n        rightCol:width-(clarifaiface.right_col*width),\r\n        bottomRow:hgt-(clarifaiface.bottom_row*hgt),\r\n      }\r\n      \r\n  }\r\n\r\n  displaybox=(box)=>{\r\n    console.log(box);\r\n      this.setState({box:box})\r\n  }\r\n\r\n  onInputChange=(event)=>{\r\n      this.setState({input:event.target.value})\r\n  }\r\n\r\n  onSubmit=()=>{\r\n    this.setState({imageURL:this.state.input})\r\n    app.models.predict(\r\n      Clarifai.FACE_DETECT_MODEL,\r\n      this.state.input).then(response=>this.displaybox(this.calcFaceData(response)))\r\n        .catch(err=> console.log(err))    \r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"App\">   \r\n      <Part />         \r\n      <Navigation onRouteChange={this.onRouteChange}/>\r\n      {this.state.route==='home'\r\n        ? <div>\r\n            <Logo />\r\n            <Rank />\r\n            <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>     \r\n            <FaceRecognition box={this.state.box} imageURL={this.state.imageURL} />\r\n            </div>\r\n            : (\r\n                this.state.route==='_signin_'\r\n              ?<SignIn onRouteChange={this.onRouteChange}/>\r\n              :<Register onRouteChange={this.onRouteChange}/>\r\n              )\r\n        \r\n      }\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import Hello from './Hello';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App/>,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n  ","module.exports = __webpack_public_path__ + \"static/media/brain.c9c5a6e2.png\";"],"sourceRoot":""}